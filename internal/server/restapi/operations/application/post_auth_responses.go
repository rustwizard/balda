// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rustwizard/balda/internal/server/models"
)

// PostAuthOKCode is the HTTP code returned for type PostAuthOK
const PostAuthOKCode int = 200

/*PostAuthOK Response for auth request

swagger:response postAuthOK
*/
type PostAuthOK struct {

	/*
	  In: Body
	*/
	Payload *models.AuthResponse `json:"body,omitempty"`
}

// NewPostAuthOK creates PostAuthOK with default headers values
func NewPostAuthOK() *PostAuthOK {

	return &PostAuthOK{}
}

// WithPayload adds the payload to the post auth o k response
func (o *PostAuthOK) WithPayload(payload *models.AuthResponse) *PostAuthOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post auth o k response
func (o *PostAuthOK) SetPayload(payload *models.AuthResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAuthUnauthorizedCode is the HTTP code returned for type PostAuthUnauthorized
const PostAuthUnauthorizedCode int = 401

/*PostAuthUnauthorized Error when auth

swagger:response postAuthUnauthorized
*/
type PostAuthUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostAuthUnauthorized creates PostAuthUnauthorized with default headers values
func NewPostAuthUnauthorized() *PostAuthUnauthorized {

	return &PostAuthUnauthorized{}
}

// WithPayload adds the payload to the post auth unauthorized response
func (o *PostAuthUnauthorized) WithPayload(payload *models.ErrorResponse) *PostAuthUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post auth unauthorized response
func (o *PostAuthUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAuthUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
