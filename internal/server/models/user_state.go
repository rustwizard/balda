// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UserState user state
//
// swagger:model UserState
type UserState struct {

	// User's ID exp points in the system
	// Example: 545648798
	Exp int64 `json:"exp,omitempty"`

	// Some User's flags.
	// Example: 99
	Flags int64 `json:"flags,omitempty"`

	// Game's ID (if game_id == 0 then user in the lobby)
	// Example: 144
	GameID int32 `json:"game_id,omitempty"`

	// User's ID lives count in the system
	// Example: 5
	Lives int64 `json:"lives,omitempty"`

	// Generated nickname in the system
	// Example: John
	Nickname string `json:"nickname,omitempty"`

	// User's ID in the system
	// Example: 545648798
	UID int64 `json:"uid,omitempty"`
}

// Validate validates this user state
func (m *UserState) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user state based on context it is used
func (m *UserState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserState) UnmarshalBinary(b []byte) error {
	var res UserState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
